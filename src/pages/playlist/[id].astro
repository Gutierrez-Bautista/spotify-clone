---
import type { GetStaticPaths } from "astro";
import Layout from "@/layouts/Layout.astro";

import { playlists, songs, type Playlist, type Song } from '@/lib/data'

import { Image } from "astro:assets";
import BackArrowIcon from '@/icons/BackArrow.astro'

interface Props {
  playlist: Playlist
  playlistSongs: Song[]
}

export const getStaticPaths = (() => {
  return playlists.map(l => {
    const playlistSongs = songs.filter(s => s.albumId === l.albumId)

    return {
      params: {id: l.id},
      props: {
        playlist: l,
        playlistSongs
      }
    }
  })
}) satisfies GetStaticPaths;

const { playlist, playlistSongs } = Astro.props

const bgContext = '--background-color: ' + playlist.color.accent
---

<Layout title={`playlist | ${playlist.title}`} >
  <div class='h-full m-1 p-5 overflow-auto rounded-xl relative bg-gradient-to-b from-context inset-0' style={bgContext}>

    <Image inferSize src={playlist.cover} alt={playlist.title} class="absolute mx-auto h-full opacity-20 -z-[7] inset-0 blur-md" />

    <div class="absolute h-full w-full top-0 left-0 bg-gradient-to-t from-zinc-900 via-transparent -z-[5]"></div>

    <a href="/" class="w-8 h-8 rounded-full bg-zinc-900/90 flex justify-center items-center font-extrabold z-10 p-2 transition ease-in-out duration-200 hover:bg-zinc-900 hover:scale-110 cursor-pointer">
      <BackArrowIcon />
    </a>

    <header class="flex items-center mt-5 gap-5">
      <Image inferSize src={playlist.cover} alt={playlist.title} class="w-[14rem]" transition:name=`image-${playlist.albumId}` />
      <div class="h-full flex flex-col justify-between">
        <span class="text-lg">Playlist</span>
        <h2 transition:name=`title-${playlist.albumId}` class="text-7xl font-bold mb-7">{playlist.title}</h2>
        <span class="opacity-95">{playlist.artists.join(', ')}</span>
      </div>
    </header>
  </div>
</Layout>

<style>
  .from-context {
    --tw-gradient-from: var(--background-color);
    --tw-gradient-to: #fff0, var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
</style>